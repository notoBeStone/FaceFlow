//
//  this file is automatically generated, DO NOT MODIFY IT
//
//  Copyright © 2015 Glority. All rights reserved.
//

import Foundation
import DGMessageAPI

/**
 * 保存消息， 用于自定义消息的保存，只保存不会发给gpt获取回复
 */

public struct ChatbotAddMessagesRequest: APIEncodableRequest {
    public typealias Response = ChatbotAddMessagesResponse

    public var languageCode: LanguageCode

    public var countryCode: String

    public var addMessageParams: [AddMessageParamModel]

    enum CodingKeys: String, CodingKey {
        case languageCode = "language_code"

        case countryCode = "country_code"

        case addMessageParams = "add_message_params"
    }
    
    public init(
            languageCode: LanguageCode, 
            countryCode: String, 
            addMessageParams: [AddMessageParamModel]) {
        self.languageCode = languageCode
        self.countryCode = countryCode
        self.addMessageParams = addMessageParams
    }
    
    public var api: String {
        "v4/chatbot/add_messages"
    }
    
    public var forceHttps: Bool {
        true
    }
    
    public var needAuth: Bool {
        true
    }
    
    public var mustAuth: Bool {
        true
    }
    
    public var methods: [String] {
        ["POST"]
    }
    
    public var mimeBodies: [APIMimeBody] {
        var bodies: [APIMimeBody] = []

        return bodies
    }
    
    public func parseParamater<T>(encoder: T) throws -> T.Output where T : APIEncoder {
        try encoder.encode(self)
    }
}

public struct ChatbotAddMessagesResponse: APIJSONResponse {
    public var addedMessageList: [MessageModel]

    enum CodingKeys: String, CodingKey {
        case addedMessageList = "added_message_list"
    }

    public init<T>(data: T.Input, decoder: T) throws where T : APIDecoder {
        self = try decoder.decode(ChatbotAddMessagesResponse.self, from: data)
    }
}

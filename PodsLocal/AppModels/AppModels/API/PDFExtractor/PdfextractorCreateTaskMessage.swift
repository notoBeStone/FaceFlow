//
//  this file is automatically generated, DO NOT MODIFY IT
//
//  Copyright © 2015 Glority. All rights reserved.
//

import Foundation
import DGMessageAPI
import GLComponentAPI

/**
 * 创建pdf提取任务
 */

public struct PdfextractorCreateTaskRequest: APIEncodableRequest {
    public typealias Response = PdfextractorCreateTaskResponse

    /**
     * 任务类型
     */
    public var processType: ProcessType

    /**
     * 上传的文件
     */
    public var file: APIFile

    /**
     * 输出文件格式
     */
    public var outputFileFormat: OutputFileFormat

    enum CodingKeys: String, CodingKey {
        case processType = "process_type"

        case outputFileFormat = "output_file_format"
    }
    
    public init(
            processType: ProcessType, 
            file: APIFile, 
            outputFileFormat: OutputFileFormat) {
        self.processType = processType
        self.file = file
        self.outputFileFormat = outputFileFormat
    }
    
    public var api: String {
        "v1/pdfextractor/create_task"
    }
    
    public var forceHttps: Bool {
        true
    }
    
    public var needAuth: Bool {
        true
    }
    
    public var mustAuth: Bool {
        true
    }
    
    public var methods: [String] {
        ["POST"]
    }
    
    public var mimeBodies: [APIMimeBody] {
        var bodies: [APIMimeBody] = []

        bodies.append(APIMimeBody.file("file", file, "file", "application/octet-stream"))

        return bodies
    }
    
    public func parseParamater<T>(encoder: T) throws -> T.Output where T : APIEncoder {
        try encoder.encode(self)
    }
}

public struct PdfextractorCreateTaskResponse: APIJSONResponse {
    /**
     * 任务ID，用于后续轮询任务是否完成以及获取任务结果
     */
    public var taskId: String

    enum CodingKeys: String, CodingKey {
        case taskId = "task_id"
    }

    public init<T>(data: T.Input, decoder: T) throws where T : APIDecoder {
        self = try decoder.decode(PdfextractorCreateTaskResponse.self, from: data)
    }
}

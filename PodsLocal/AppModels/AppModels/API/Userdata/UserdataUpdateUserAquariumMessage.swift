//
//  this file is automatically generated, DO NOT MODIFY IT
//
//  Copyright Â© 2015 Glority. All rights reserved.
//

import Foundation
import DGMessageAPI

public struct UserdataUpdateUserAquariumRequest: APIEncodableRequest {
    public typealias Response = UserdataUpdateUserAquariumResponse

    public var aquariumId: Int64

    public var aquarium: UserAquariumUpdateRequestEntityModel

    enum CodingKeys: String, CodingKey {
        case aquariumId = "aquarium_id"

        case aquarium = "aquarium"
    }
    
    public init(
            aquariumId: Int64, 
            aquarium: UserAquariumUpdateRequestEntityModel) {
        self.aquariumId = aquariumId
        self.aquarium = aquarium
    }
    
    public var api: String {
        "v3/userdata/update_user_aquarium"
    }
    
    public var forceHttps: Bool {
        true
    }
    
    public var needAuth: Bool {
        true
    }
    
    public var mustAuth: Bool {
        true
    }
    
    public var methods: [String] {
        ["POST"]
    }
    
    public var mimeBodies: [APIMimeBody] {
        var bodies: [APIMimeBody] = []

        return bodies
    }
    
    public func parseParamater<T>(encoder: T) throws -> T.Output where T : APIEncoder {
        try encoder.encode(self)
    }
}

public struct UserdataUpdateUserAquariumResponse: APIJSONResponse {
    public var newAquarium: UserAquariumResponseEntityModel

    enum CodingKeys: String, CodingKey {
        case newAquarium = "new_aquarium"
    }

    public init<T>(data: T.Input, decoder: T) throws where T : APIDecoder {
        self = try decoder.decode(UserdataUpdateUserAquariumResponse.self, from: data)
    }
}

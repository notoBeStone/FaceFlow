import yaml
import os

# Define file paths
yaml_file_path = 'i18N/i18n.yaml'
swift_file_path = 'EasySing/i18N/i18N.swift' # Corrected path based on project structure

# Ensure the target directory exists
swift_dir = os.path.dirname(swift_file_path)
if swift_dir and not os.path.exists(swift_dir):
    os.makedirs(swift_dir)

# Read the YAML file
try:
    with open(yaml_file_path, 'r', encoding='utf-8') as file:
        i18n_data = yaml.safe_load(file)
except FileNotFoundError:
    print(f"Error: YAML file not found at {yaml_file_path}")
    exit(1)
except yaml.YAMLError as e:
    print(f"Error parsing YAML file: {e}")
    exit(1)
except Exception as e:
    print(f"An unexpected error occurred while reading the YAML file: {e}")
    exit(1)


# Generate Swift code
swift_code = """//
// Generated code, do not modify.
// Generated by i18N/generate.py
//

import Foundation

extension GLMPLanguage {

"""

if i18n_data:
    for module, terms in i18n_data.items():
        if isinstance(terms, dict):
            swift_code += f"    // MARK: - {module.capitalize()}\n"
            for term, value in terms.items():
                variable_name = f"{module}_{term}"
                # Basic escaping for double quotes within the string
                escaped_value = str(value).replace('"', '\\"')
                swift_code += f'    static let {variable_name} = "{escaped_value}"\n'
            swift_code += "\n"
        else:
             print(f"Warning: Skipping non-dictionary item under top-level key '{module}' in YAML.")

swift_code += "}\n"

# Write the Swift file
try:
    with open(swift_file_path, 'w', encoding='utf-8') as file:
        file.write(swift_code)
    print(f"Successfully generated Swift code to {swift_file_path}")
except IOError as e:
    print(f"Error writing Swift file: {e}")
    exit(1)
except Exception as e:
    print(f"An unexpected error occurred while writing the Swift file: {e}")
    exit(1)
